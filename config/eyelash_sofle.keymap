#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 35    // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    zip_scroll_scaler: zip_scroll_scaler {
        compatible = "zmk,input-processor-scaler";
        #input-processor-cells = <2>;
        type = <INPUT_EV_REL>;
        codes = <INPUT_REL_WHEEL INPUT_REL_HWHEEL>;
        track-remainders;
    };
};

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <0>;      // 0
    time-to-max-speed-ms = <0>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <400>;
    acceleration-exponent = <1>;
};

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    combos {
        compatible = "zmk,combos";

        moveTo_L1 {
            bindings = <&to 0>;
            key-positions = <56 55>;
        };

        moveTo_L2 {
            bindings = <&to 0>;
            key-positions = <55 61>;
        };

        moveTo_L3 {
            bindings = <&to 0>;
            key-positions = <55 26>;
        };
    };

    behaviors {
    };

    macros {
        klist: klist {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp MINUS &kp SPACE &kp LBKT &kp SPACE &kp RIGHT_BRACKET>;
            label = "KLIST";
        };

        tpathbold: tpathbold {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(NUMBER_6) &kp B>;
            label = "TPATHBOLD";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer_0 {
            bindings = <
&kp ESC           &kp N1        &kp N2            &kp N3            &kp N4  &kp N5       &kp UP     &kp N6     &kp N7     &kp N8     &kp N9             &kp N0             &kp BSPC
&kp TAB           &kp Q         &kp W             &kp E             &kp R   &kp T        &kp DOWN   &kp Y      &kp U      &kp I      &kp O              &kp P              &kp LEFT_BRACKET
&mo 3             &kp A         &kp S             &kp D             &kp F   &kp G        &kp LEFT   &kp H      &kp J      &kp K      &kp L              &kp SEMI           &kp SQT
&kp LEFT_SHIFT    &kp Z         &kp X             &kp C             &kp V   &kp B        &kp RIGHT  &kp N      &kp M      &kp COMMA  &kp DOT            &kp FSLH           &kp RSHFT
&kp C_PLAY_PAUSE  &kp LEFT_ALT  &kp LEFT_CONTROL  &kp LEFT_COMMAND  &mo 1   &kp SPACE    &kp RET    &kp SPACE  &kp ENTER  &mo 2      &kp RIGHT_COMMAND  &kp RIGHT_CONTROL
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
        };

        layer_1 {
            bindings = <
&kp ESC   &kp F1  &kp F2           &kp F3                &kp F4                 &kp F5        &mmv MOVE_UP     &kp F6             &kp F7         &kp F8        &kp F9          &kp F10                &kp F11
&trans    &trans  &kp NON_US_HASH  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp UNDER     &mmv MOVE_DOWN   &kp N7             &kp N8         &kp N9        &kp N0          &kp LEFT_PARENTHESIS   &kp F12
&trans    &trans  &trans           &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp EQUAL     &mmv MOVE_LEFT   &kp NUMBER_4       &kp N5         &kp NUMBER_6  &kp ASTERISK    &kp RIGHT_PARENTHESIS  &kp LC(INS)
&kp CAPS  &trans  &trans           &kp LC(INS)           &kp LS(INS)            &tpathbold    &mmv MOVE_RIGHT  &kp NUMBER_1       &kp NUMBER_2   &kp NUMBER_3  &kp MINUS       &kp BSLH               &kp LS(INS)
&trans    &trans  &trans           &trans                &trans                 &trans        &mkp LCLK        &kp LA(BACKSPACE)  &kp BACKSPACE  &trans        &kp KP_NUMLOCK  &kp PLUS
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_2 {
            bindings = <
&trans                             &trans  &trans                             &trans     &trans     &trans       &mmv MOVE_UP     &trans        &trans     &trans          &kp PAGE_UP     &kp LA(DEL)           &kp DEL
&trans                             &trans  &kp C_AC_DESKTOP_SHOW_ALL_WINDOWS  &trans     &trans     &trans       &mmv MOVE_DOWN   &kp SLASH     &kp EQUAL  &trans          &kp PAGE_DOWN   &kp LEFT_BRACKET      &kp RIGHT_BRACKET
&trans                             &trans  &trans                             &trans     &trans     &trans       &mmv MOVE_LEFT   &kp ASTERISK  &kp HASH   &trans          &kp UP_ARROW    &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&trans                             &trans  &trans                             &kp LC(C)  &kp LC(V)  &trans       &mmv MOVE_RIGHT  &kp MINUS     &klist     &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT             &trans
&kp C_AC_DESKTOP_SHOW_ALL_WINDOWS  &trans  &trans                             &trans     &trans     &kp UNDER    &mkp LCLK        &trans        &trans     &trans          &trans          &trans
            >;

            sensor-bindings = <&inc_dec_kp C_BRIGHTNESS_INC C_BRIGHTNESS_DEC>;
        };

        layer_3 {
            bindings = <
&bt BT_NXT  &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 3   &bt BT_SEL 4      &trans  &rgb_ug RGB_BRD  &rgb_ug RGB_BRI  &rgb_ug RGB_EFF  &rgb_ug RGB_SPD  &rgb_ug RGB_SPI  &trans
&bt BT_CLR  &bt BT_DISC 0  &bt BT_DISC 1  &bt BT_DISC 2  &bt BT_DISC 3  &bt BT_DISC 4     &trans  &rgb_ug RGB_TOG  &trans           &trans           &trans           &trans           &trans
&trans      &trans         &trans         &trans         &bt BT_CLR     &bt BT_CLR_ALL    &trans  &rgb_ug RGB_HUD  &rgb_ug RGB_HUD  &rgb_ug RGB_SAD  &rgb_ug RGB_SAD  &trans           &trans
&sys_reset  &soft_off      &bootloader    &trans         &trans         &trans            &trans  &trans           &trans           &trans           &bootloader      &soft_off        &sys_reset
&trans      &out OUT_USB   &out OUT_BLE   &trans         &trans         &trans            &trans  &trans           &trans           &trans           &trans           &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };
    };
};
